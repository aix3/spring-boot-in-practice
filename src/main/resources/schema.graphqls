scalar JSON

type Query {
    authLogged: User
    authLogout: User!
    userInfo(id: Int!): User!
    userFollowing(userId: Int, limit: Int, offset: Int): [User!]!
    userFollowingCount(userId: Int): Int!
    userFollower(userId: Int, limit: Int, offset: Int): [User!]!
    userFollowerCount(userId: Int): Int!

    postInfo(id: Int!): Post!
    postPublished(userId: Int, limit: Int, offset: Int): [Post!]!
    postPublishedCount(userId: Int): Int!
    postLiked(userId: Int, limit: Int, offset: Int): [Post!]!
    postLikedCount(userId: Int): Int!
    postFollowing(limit: Int, beforeId: Int, afterId: Int): [Post!]!
    postFollowingCount: Int!

    fileInfo(id: Int!): File!
}

type Mutation {
    authLogin(user: UserInput!): User!
    userRegister(user: UserInput!): User!
    userModify(user: UserInput!, code: String): User!
    userSendMobileVerifyCode(type: String!, mobile: String!): String!
    userFollow(userId: Int!): Boolean!
    userUnfollow(userId: Int!): Boolean!

    postPublish(post: PostInput!): Post!
    postDelete(id: Int!): Boolean!
    postLike(postId: Int!): Boolean!
    postUnlike(postId: Int!): Boolean!
}

type User {
    id: Int!
    username: String!
    mobile: String
    email: String
    avatarId: Int
    intro: String!
    createdAt: String!
    updatedAt: String
    avatar: File
    stat: UserStat!
    following: Boolean!
}

type Post {
    id: Int!
    userId: Int!
    type: PostType!
    text: String!
    imageIds: [Int!]
    videoId: Int
    createdAt: String!
    updatedAt: String
    user: User!
    images: [File!]
    video: File
    stat: PostStat!
    liked: Boolean!
}

enum PostType {
    TEXT
    IMAGE
    VIDEO
}

type File {
    id: Int!
    userId: Int!
    region: String!
    bucket: String!
    path: String!
    meta: FileMeta!
    createdAt: String!
    updatedAt: String
    user: User!
    url: String!
    thumbs: JSON
}

type FileMeta {
    name: String!
    size: Int!
    type: String!
}

type UserStat {
    id: Int!
    userId: Int!
    postCount: Int!
    likeCount: Int!
    followingCount: Int!
    followerCount: Int!
    createdAt: String!
    updatedAt: String
    user: User!
}

type PostStat {
    id: Int!
    postId: Int!
    likeCount: Int!
    createdAt: String!
    updatedAt: String
    post: Post!
}

input UserInput {
    username: String
    password: String
    mobile: String
    email: String
    avatarId: Int
    intro: String
}

input PostInput {
    type: String
    text: String
    imageIds: [Int!]
    videoId: Int
}
